default:
    image: "ruby:2.7.1"
    services:
        - postgres:12
    # Cache gems in between builds
    cache:
        paths:
            - vendor/ruby

variables:
    # Configured in database.yml
    POSTGRES_DB: console_test
    POSTGRES_USER: hunt-console
    POSTGRES_PASSWORD: runner-password
    POSTGRES_HOST_AUTH_METHOD: trust # Allows access without password

# This is a basic example for a gem or script which doesn't use
# services such as redis or postgres
before_script:
    - ruby -v # Print out ruby version for debugging
    # Construct the database url from the setup variables. This SHOULD override settings in config/database.yml.
    # See https://edgeguides.rubyonrails.org/configuring.html#connection-preference
    - export DATABASE_URL="postgres://$POSTGRES_USER@postgres:5432/$POSTGRES_DB"
    - bundle config set path 'vendor' # Install dependencies into vendor/ruby
    # Don't need the Javascript runtime for tests since they only touch the Rails backend.
    # - apt-get update -q && apt-get install nodejs -yqq
    - bundle install -j $(nproc)

rspec:
    variables:
        TEST_OUTPUT_FILE: rspec.xml
    script:
        - bundle exec rails db:create db:migrate RAILS_ENV=test
        - bundle exec rspec --output ${TEST_OUTPUT_FILE} --format RspecJunitFormatter
    artifacts:
        reports:
            junit: ${TEST_OUTPUT_FILE}
